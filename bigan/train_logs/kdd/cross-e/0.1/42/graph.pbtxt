node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "is_training_pl"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "lr_pl"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.26111647486686707
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.26111647486686707
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/max"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/mul"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias"
  input: "encoder_model/encoder/layer_1/fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/MatMul"
  op: "MatMul"
  input: "input"
  input: "encoder_model/encoder/layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "encoder_model/encoder/layer_1/fc/MatMul"
  input: "encoder_model/encoder/layer_1/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/leaky_relu/Relu"
  op: "Relu"
  input: "encoder_model/encoder/layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/leaky_relu/Neg"
  op: "Neg"
  input: "encoder_model/encoder/layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "encoder_model/encoder/layer_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/leaky_relu/mul"
  op: "Mul"
  input: "encoder_model/encoder/layer_1/leaky_relu/mul/x"
  input: "encoder_model/encoder/layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/leaky_relu/sub"
  op: "Sub"
  input: "encoder_model/encoder/layer_1/leaky_relu/Relu"
  input: "encoder_model/encoder/layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 28
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/max"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/mul"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias"
  input: "encoder_model/encoder/layer_2/fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/MatMul"
  op: "MatMul"
  input: "encoder_model/encoder/layer_1/leaky_relu/sub"
  input: "encoder_model/encoder/layer_2/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/BiasAdd"
  op: "BiasAdd"
  input: "encoder_model/encoder/layer_2/fc/MatMul"
  input: "encoder_model/encoder/layer_2/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_model/random_normal/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/random_normal/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/random_normal/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_model/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator_model/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 44
    }
  }
}
node {
  name: "generator_model/random_normal/mul"
  op: "Mul"
  input: "generator_model/random_normal/RandomStandardNormal"
  input: "generator_model/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/random_normal"
  op: "Add"
  input: "generator_model/random_normal/mul"
  input: "generator_model/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 50
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/max"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/mul"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias"
  input: "generator_model/generator/layer_1/fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/MatMul"
  op: "MatMul"
  input: "generator_model/random_normal"
  input: "generator_model/generator/layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "generator_model/generator/layer_1/fc/MatMul"
  input: "generator_model/generator/layer_1/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_model/generator/layer_1/Relu"
  op: "Relu"
  input: "generator_model/generator/layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 67
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/max"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/mul"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias"
  input: "generator_model/generator/layer_2/fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/MatMul"
  op: "MatMul"
  input: "generator_model/generator/layer_1/Relu"
  input: "generator_model/generator/layer_2/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/BiasAdd"
  op: "BiasAdd"
  input: "generator_model/generator/layer_2/fc/MatMul"
  input: "generator_model/generator/layer_2/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_model/generator/layer_2/Relu"
  op: "Relu"
  input: "generator_model/generator/layer_2/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1986798495054245
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1986798495054245
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 84
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/max"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/mul"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias"
  input: "generator_model/generator/layer_3/fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/MatMul"
  op: "MatMul"
  input: "generator_model/generator/layer_2/Relu"
  input: "generator_model/generator/layer_3/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/BiasAdd"
  op: "BiasAdd"
  input: "generator_model/generator/layer_3/fc/MatMul"
  input: "generator_model/generator/layer_3/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1986798495054245
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1986798495054245
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 100
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/max"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/mul"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/MatMul"
  op: "MatMul"
  input: "input"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator/x_layer_1/fc/MatMul"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model/discriminator/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/mul/x"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 128
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Identity"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917278289795
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917278289795
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 146
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/max"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/mul"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/MatMul"
  op: "MatMul"
  input: "encoder_model/encoder/layer_2/fc/BiasAdd"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator/z_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model/discriminator/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul/x"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 174
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/Identity"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/concat"
  op: "ConcatV2"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 194
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/max"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/mul"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model/discriminator/concat"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator/y_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model/discriminator/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul/x"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 222
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/Identity"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2156655490398407
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2156655490398407
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 240
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/max"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/mul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator/y_fc_logits/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/fc/MatMul"
  op: "MatMul"
  input: "generator_model/generator/layer_3/fc/BiasAdd"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator_1/x_layer_1/fc/MatMul"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul/x"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/Shape"
  op: "Const"
  input: "^discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 269
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch:1"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dense/MatMul"
  op: "MatMul"
  input: "generator_model/random_normal"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator_1/z_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul/x"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/Shape"
  op: "Const"
  input: "^discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 301
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul/Switch:1"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/concat"
  op: "ConcatV2"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model/discriminator_1/concat"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator_1/y_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul/x"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/Shape"
  op: "Const"
  input: "^discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 335
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch:1"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_logits/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "loss_functions/ones_like/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_functions/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_functions/ones_like"
  op: "Fill"
  input: "loss_functions/ones_like/Shape"
  input: "loss_functions/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_functions/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/Select"
  op: "Select"
  input: "loss_functions/logistic_loss/GreaterEqual"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss/GreaterEqual"
  input: "loss_functions/logistic_loss/Neg"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/sub"
  op: "Sub"
  input: "loss_functions/logistic_loss/Select"
  input: "loss_functions/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/Exp"
  op: "Exp"
  input: "loss_functions/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss/Log1p"
  op: "Log1p"
  input: "loss_functions/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss"
  op: "Add"
  input: "loss_functions/logistic_loss/sub"
  input: "loss_functions/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_functions/Mean"
  op: "Mean"
  input: "loss_functions/logistic_loss"
  input: "loss_functions/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_functions/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_1/GreaterEqual"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_1/GreaterEqual"
  input: "loss_functions/logistic_loss_1/Neg"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/sub"
  op: "Sub"
  input: "loss_functions/logistic_loss_1/Select"
  input: "loss_functions/logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/Exp"
  op: "Exp"
  input: "loss_functions/logistic_loss_1/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1/Log1p"
  op: "Log1p"
  input: "loss_functions/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_1"
  op: "Add"
  input: "loss_functions/logistic_loss_1/sub"
  input: "loss_functions/logistic_loss_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_functions/Mean_1"
  op: "Mean"
  input: "loss_functions/logistic_loss_1"
  input: "loss_functions/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_functions/add"
  op: "AddV2"
  input: "loss_functions/Mean_1"
  input: "loss_functions/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss_functions/ones_like_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_functions/ones_like_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_functions/ones_like_1"
  op: "Fill"
  input: "loss_functions/ones_like_1/Shape"
  input: "loss_functions/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss_2/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_2/GreaterEqual"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss_2/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_2/GreaterEqual"
  input: "loss_functions/logistic_loss_2/Neg"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/mul"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/sub"
  op: "Sub"
  input: "loss_functions/logistic_loss_2/Select"
  input: "loss_functions/logistic_loss_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/Exp"
  op: "Exp"
  input: "loss_functions/logistic_loss_2/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2/Log1p"
  op: "Log1p"
  input: "loss_functions/logistic_loss_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_2"
  op: "Add"
  input: "loss_functions/logistic_loss_2/sub"
  input: "loss_functions/logistic_loss_2/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_functions/Mean_2"
  op: "Mean"
  input: "loss_functions/logistic_loss_2"
  input: "loss_functions/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_functions/zeros_like_1"
  op: "ZerosLike"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/zeros_like"
  op: "ZerosLike"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss_3/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_3/GreaterEqual"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/logistic_loss_3/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/Neg"
  op: "Neg"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_3/GreaterEqual"
  input: "loss_functions/logistic_loss_3/Neg"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/mul"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "loss_functions/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/sub"
  op: "Sub"
  input: "loss_functions/logistic_loss_3/Select"
  input: "loss_functions/logistic_loss_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/Exp"
  op: "Exp"
  input: "loss_functions/logistic_loss_3/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3/Log1p"
  op: "Log1p"
  input: "loss_functions/logistic_loss_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/logistic_loss_3"
  op: "Add"
  input: "loss_functions/logistic_loss_3/sub"
  input: "loss_functions/logistic_loss_3/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss_functions/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_functions/Mean_3"
  op: "Mean"
  input: "loss_functions/logistic_loss_3"
  input: "loss_functions/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/Fill"
  op: "Fill"
  input: "optimizers/gradients/Shape"
  input: "optimizers/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients/Fill"
  input: "optimizers/gradients/loss_functions/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/Mean_2_grad/Tile"
  op: "Tile"
  input: "optimizers/gradients/loss_functions/Mean_2_grad/Reshape"
  input: "optimizers/gradients/loss_functions/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 50.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "optimizers/gradients/loss_functions/Mean_2_grad/Tile"
  input: "optimizers/gradients/loss_functions/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/loss_functions/Mean_2_grad/truediv"
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/Mean_2_grad/truediv"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/Mean_2_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/Mean_2_grad/truediv"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/Mean_2_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/Neg"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/control_dependency"
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/control_dependency"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/Mean_2_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/Neg"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/add/x"
  op: "Const"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/add"
  op: "AddV2"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/add/x"
  input: "loss_functions/logistic_loss_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/mul"
  op: "Mul"
  input: "optimizers/gradients/loss_functions/logistic_loss_2_grad/tuple/control_dependency_1"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_2/GreaterEqual"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/control_dependency"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_2/GreaterEqual"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/zeros_like"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select_1"
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select_1"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/control_dependency_1"
  input: "loss_functions/ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul_1"
  op: "Mul"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul_1"
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul_1"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Exp_grad/mul"
  op: "Mul"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Log1p_grad/mul"
  input: "loss_functions/logistic_loss_2/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_2/GreaterEqual"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Exp_grad/mul"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_2/GreaterEqual"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/zeros_like"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select_1"
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select_1"
  input: "^optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/loss_functions/logistic_loss_2/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/AddN"
  op: "AddN"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/tuple/control_dependency"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/mul_grad/tuple/control_dependency"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Select_1_grad/tuple/control_dependency_1"
  input: "optimizers/gradients/loss_functions/logistic_loss_2/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/AddN"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/AddN"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/loss_functions/logistic_loss_2/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Identity"
  op: "Identity"
  input: "optimizers/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Shape_1"
  op: "Shape"
  input: "optimizers/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/zeros/Const"
  op: "Const"
  input: "^optimizers/gradients/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/zeros"
  op: "Fill"
  input: "optimizers/gradients/Shape_1"
  input: "optimizers/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs/s0"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch:1"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Identity_1"
  op: "Identity"
  input: "optimizers/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Shape_2"
  op: "Shape"
  input: "optimizers/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/zeros_1/Const"
  op: "Const"
  input: "^optimizers/gradients/Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/zeros_1"
  op: "Fill"
  input: "optimizers/gradients/Shape_2"
  input: "optimizers/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients/zeros_1"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/AddN_1"
  op: "AddN"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/AddN_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/AddN_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs/s0"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul/x"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/AddN_2"
  op: "AddN"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/AddN_2"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/AddN_2"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator_1/concat"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/mod"
  op: "FloorMod"
  input: "discriminator_model/discriminator_1/concat/axis"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/mod"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Shape"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice"
  op: "Slice"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/ConcatOffset"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice_1"
  op: "Slice"
  input: "optimizers/gradients/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/ConcatOffset:1"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice_1"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients/discriminator_model/discriminator_1/concat_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Switch_2"
  op: "Switch"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Identity_2"
  op: "Identity"
  input: "optimizers/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Shape_3"
  op: "Shape"
  input: "optimizers/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/zeros_2/Const"
  op: "Const"
  input: "^optimizers/gradients/Identity_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/zeros_2"
  op: "Fill"
  input: "optimizers/gradients/Shape_3"
  input: "optimizers/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch:1"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Switch_3"
  op: "Switch"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Identity_3"
  op: "Identity"
  input: "optimizers/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/Shape_4"
  op: "Shape"
  input: "optimizers/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/zeros_3/Const"
  op: "Const"
  input: "^optimizers/gradients/Identity_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients/zeros_3"
  op: "Fill"
  input: "optimizers/gradients/Shape_4"
  input: "optimizers/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients/zeros_3"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/AddN_3"
  op: "AddN"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/AddN_3"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/AddN_3"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul/x"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/AddN_4"
  op: "AddN"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/AddN_4"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/AddN_4"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "generator_model/generator/layer_3/fc/BiasAdd"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency"
  input: "^optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency"
  input: "^optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/control_dependency"
  input: "generator_model/generator/layer_3/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "generator_model/generator/layer_2/Relu"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/tuple/control_dependency"
  input: "generator_model/generator/layer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients/generator_model/generator/layer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/generator_model/generator/layer_2/Relu_grad/ReluGrad"
  input: "^optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_2/Relu_grad/ReluGrad"
  input: "^optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/control_dependency"
  input: "generator_model/generator/layer_2/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "generator_model/generator/layer_1/Relu"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/tuple/control_dependency"
  input: "generator_model/generator/layer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients/generator_model/generator/layer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/generator_model/generator/layer_1/Relu_grad/ReluGrad"
  input: "^optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_1/Relu_grad/ReluGrad"
  input: "^optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  input: "generator_model/generator/layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "generator_model/random_normal"
  input: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "optimizers/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizers/beta1_power/Assign"
  op: "Assign"
  input: "optimizers/beta1_power"
  input: "optimizers/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/beta1_power/read"
  op: "Identity"
  input: "optimizers/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizers/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizers/beta2_power/Assign"
  op: "Assign"
  input: "optimizers/beta2_power"
  input: "optimizers/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/beta2_power/read"
  op: "Identity"
  input: "optimizers/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/Initializer/zeros"
  op: "Fill"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/Initializer/zeros/shape_as_tensor"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/Initializer/zeros"
  op: "Fill"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/Initializer/zeros/shape_as_tensor"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/Initializer/zeros"
  op: "Fill"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/Initializer/zeros/shape_as_tensor"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gen_optimizer/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "optimizers/gen_optimizer/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizers/gen_optimizer/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "generator_model/generator/layer_1/fc/kernel"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
  input: "optimizers/beta1_power/read"
  input: "optimizers/beta2_power/read"
  input: "lr_pl"
  input: "optimizers/gen_optimizer/beta1"
  input: "optimizers/gen_optimizer/beta2"
  input: "optimizers/gen_optimizer/epsilon"
  input: "optimizers/gradients/generator_model/generator/layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "generator_model/generator/layer_1/fc/bias"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
  input: "optimizers/beta1_power/read"
  input: "optimizers/beta2_power/read"
  input: "lr_pl"
  input: "optimizers/gen_optimizer/beta1"
  input: "optimizers/gen_optimizer/beta2"
  input: "optimizers/gen_optimizer/epsilon"
  input: "optimizers/gradients/generator_model/generator/layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "generator_model/generator/layer_2/fc/kernel"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
  input: "optimizers/beta1_power/read"
  input: "optimizers/beta2_power/read"
  input: "lr_pl"
  input: "optimizers/gen_optimizer/beta1"
  input: "optimizers/gen_optimizer/beta2"
  input: "optimizers/gen_optimizer/epsilon"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "generator_model/generator/layer_2/fc/bias"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
  input: "optimizers/beta1_power/read"
  input: "optimizers/beta2_power/read"
  input: "lr_pl"
  input: "optimizers/gen_optimizer/beta1"
  input: "optimizers/gen_optimizer/beta2"
  input: "optimizers/gen_optimizer/epsilon"
  input: "optimizers/gradients/generator_model/generator/layer_2/fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "generator_model/generator/layer_3/fc/kernel"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
  input: "optimizers/beta1_power/read"
  input: "optimizers/beta2_power/read"
  input: "lr_pl"
  input: "optimizers/gen_optimizer/beta1"
  input: "optimizers/gen_optimizer/beta2"
  input: "optimizers/gen_optimizer/epsilon"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "generator_model/generator/layer_3/fc/bias"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
  input: "optimizers/beta1_power/read"
  input: "optimizers/beta2_power/read"
  input: "lr_pl"
  input: "optimizers/gen_optimizer/beta1"
  input: "optimizers/gen_optimizer/beta2"
  input: "optimizers/gen_optimizer/epsilon"
  input: "optimizers/gradients/generator_model/generator/layer_3/fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gen_optimizer/mul"
  op: "Mul"
  input: "optimizers/beta1_power/read"
  input: "optimizers/gen_optimizer/beta1"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/kernel/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gen_optimizer/Assign"
  op: "Assign"
  input: "optimizers/beta1_power"
  input: "optimizers/gen_optimizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gen_optimizer/mul_1"
  op: "Mul"
  input: "optimizers/beta2_power/read"
  input: "optimizers/gen_optimizer/beta2"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/kernel/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gen_optimizer/Assign_1"
  op: "Assign"
  input: "optimizers/beta2_power"
  input: "optimizers/gen_optimizer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gen_optimizer"
  op: "NoOp"
  input: "^optimizers/gen_optimizer/Assign"
  input: "^optimizers/gen_optimizer/Assign_1"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_2/fc/kernel/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/bias/ApplyAdam"
  input: "^optimizers/gen_optimizer/update_generator_model/generator/layer_3/fc/kernel/ApplyAdam"
}
node {
  name: "optimizers/gradients_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Fill"
  op: "Fill"
  input: "optimizers/gradients_1/Shape"
  input: "optimizers/gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/Fill"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Shape"
  op: "Shape"
  input: "loss_functions/logistic_loss_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Tile"
  op: "Tile"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Reshape"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/logistic_loss_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Prod"
  op: "Prod"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Shape_1"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Prod_1"
  op: "Prod"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Shape_2"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Maximum"
  op: "Maximum"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Prod_1"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/floordiv"
  op: "FloorDiv"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Prod"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/Cast"
  op: "Cast"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/Mean_3_grad/truediv"
  op: "RealDiv"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Tile"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Shape"
  op: "Shape"
  input: "loss_functions/logistic_loss_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/logistic_loss_3/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Shape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/truediv"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Sum"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/loss_functions/Mean_3_grad/truediv"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Sum_1"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape_1"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Shape"
  op: "Shape"
  input: "loss_functions/logistic_loss_3/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/logistic_loss_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Shape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Sum"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Neg"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Sum_1"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape_1"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/add/x"
  op: "Const"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/add"
  op: "AddV2"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/add/x"
  input: "loss_functions/logistic_loss_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/mul"
  op: "Mul"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_3/GreaterEqual"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_3/GreaterEqual"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/zeros_like"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select_1"
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select_1"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Shape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/control_dependency_1"
  input: "loss_functions/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Mul"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Sum"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Mul_1"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Sum_1"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape_1"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Exp_grad/mul"
  op: "Mul"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Log1p_grad/mul"
  input: "loss_functions/logistic_loss_3/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss_functions/logistic_loss_3/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_3/GreaterEqual"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Exp_grad/mul"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_3/GreaterEqual"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/zeros_like"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select_1"
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select_1"
  input: "^optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/loss_functions/logistic_loss_3/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/AddN"
  op: "AddN"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/mul_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Select_1_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_1/loss_functions/logistic_loss_3/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/AddN"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/AddN"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/loss_functions/logistic_loss_3/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/Merge"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Identity"
  op: "Identity"
  input: "optimizers/gradients_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Shape_1"
  op: "Shape"
  input: "optimizers/gradients_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros/Const"
  op: "Const"
  input: "^optimizers/gradients_1/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros"
  op: "Fill"
  input: "optimizers/gradients_1/Shape_1"
  input: "optimizers/gradients_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Identity_1"
  op: "Identity"
  input: "optimizers/gradients_1/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Shape_2"
  op: "Shape"
  input: "optimizers/gradients_1/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros_1/Const"
  op: "Const"
  input: "^optimizers/gradients_1/Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros_1"
  op: "Fill"
  input: "optimizers/gradients_1/Shape_2"
  input: "optimizers/gradients_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_1/zeros_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/AddN_1"
  op: "AddN"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/AddN_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Neg"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul/x"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/AddN_2"
  op: "AddN"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_1/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/AddN_2"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/AddN_2"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator/concat"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/mod"
  op: "FloorMod"
  input: "discriminator_model/discriminator/concat/axis"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ShapeN"
  op: "ShapeN"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/Merge"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/mod"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ShapeN"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice"
  op: "Slice"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ConcatOffset"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice_1"
  op: "Slice"
  input: "optimizers/gradients_1/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ConcatOffset:1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_1/discriminator_model/discriminator/concat_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Switch_2"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Identity_2"
  op: "Identity"
  input: "optimizers/gradients_1/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Shape_3"
  op: "Shape"
  input: "optimizers/gradients_1/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros_2/Const"
  op: "Const"
  input: "^optimizers/gradients_1/Identity_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros_2"
  op: "Fill"
  input: "optimizers/gradients_1/Shape_3"
  input: "optimizers/gradients_1/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Switch_3"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Identity_3"
  op: "Identity"
  input: "optimizers/gradients_1/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/Shape_4"
  op: "Shape"
  input: "optimizers/gradients_1/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros_3/Const"
  op: "Const"
  input: "^optimizers/gradients_1/Identity_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/zeros_3"
  op: "Fill"
  input: "optimizers/gradients_1/Shape_4"
  input: "optimizers/gradients_1/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_1/zeros_3"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/AddN_3"
  op: "AddN"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/AddN_3"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Neg"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul/x"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum_1"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/AddN_4"
  op: "AddN"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_1/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/AddN_4"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/AddN_4"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_model/encoder/layer_2/fc/BiasAdd"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/control_dependency"
  input: "encoder_model/encoder/layer_2/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_model/encoder/layer_1/leaky_relu/sub"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Shape"
  op: "Shape"
  input: "encoder_model/encoder/layer_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Shape_1"
  op: "Shape"
  input: "encoder_model/encoder/layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Shape"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Sum"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Neg"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Sum_1"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape_1"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "encoder_model/encoder/layer_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Shape"
  op: "Shape"
  input: "encoder_model/encoder/layer_1/leaky_relu/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Shape_1"
  op: "Shape"
  input: "encoder_model/encoder/layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Shape"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "encoder_model/encoder/layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "encoder_model/encoder/layer_1/leaky_relu/mul/x"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Mul_1"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Sum_1"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape_1"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "encoder_model/encoder/layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/AddN_5"
  op: "AddN"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_1/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/AddN_5"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/AddN_5"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  input: "encoder_model/encoder/layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/beta1_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "optimizers/beta1_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizers/beta1_power_1/Assign"
  op: "Assign"
  input: "optimizers/beta1_power_1"
  input: "optimizers/beta1_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/beta1_power_1/read"
  op: "Identity"
  input: "optimizers/beta1_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/beta2_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizers/beta2_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizers/beta2_power_1/Assign"
  op: "Assign"
  input: "optimizers/beta2_power_1"
  input: "optimizers/beta2_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/beta2_power_1/read"
  op: "Identity"
  input: "optimizers/beta2_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Initializer/zeros"
  op: "Fill"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Initializer/zeros/shape_as_tensor"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Initializer/zeros"
  op: "Fill"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Initializer/zeros/shape_as_tensor"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/enc_optimizer/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "optimizers/enc_optimizer/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizers/enc_optimizer/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
  input: "optimizers/beta1_power_1/read"
  input: "optimizers/beta2_power_1/read"
  input: "lr_pl"
  input: "optimizers/enc_optimizer/beta1"
  input: "optimizers/enc_optimizer/beta2"
  input: "optimizers/enc_optimizer/epsilon"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_model/encoder/layer_1/fc/bias"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
  input: "optimizers/beta1_power_1/read"
  input: "optimizers/beta2_power_1/read"
  input: "lr_pl"
  input: "optimizers/enc_optimizer/beta1"
  input: "optimizers/enc_optimizer/beta2"
  input: "optimizers/enc_optimizer/epsilon"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
  input: "optimizers/beta1_power_1/read"
  input: "optimizers/beta2_power_1/read"
  input: "lr_pl"
  input: "optimizers/enc_optimizer/beta1"
  input: "optimizers/enc_optimizer/beta2"
  input: "optimizers/enc_optimizer/epsilon"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "encoder_model/encoder/layer_2/fc/bias"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
  input: "optimizers/beta1_power_1/read"
  input: "optimizers/beta2_power_1/read"
  input: "lr_pl"
  input: "optimizers/enc_optimizer/beta1"
  input: "optimizers/enc_optimizer/beta2"
  input: "optimizers/enc_optimizer/epsilon"
  input: "optimizers/gradients_1/encoder_model/encoder/layer_2/fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/enc_optimizer/mul"
  op: "Mul"
  input: "optimizers/beta1_power_1/read"
  input: "optimizers/enc_optimizer/beta1"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/bias/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/enc_optimizer/Assign"
  op: "Assign"
  input: "optimizers/beta1_power_1"
  input: "optimizers/enc_optimizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/enc_optimizer/mul_1"
  op: "Mul"
  input: "optimizers/beta2_power_1/read"
  input: "optimizers/enc_optimizer/beta2"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/bias/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/enc_optimizer/Assign_1"
  op: "Assign"
  input: "optimizers/beta2_power_1"
  input: "optimizers/enc_optimizer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/enc_optimizer"
  op: "NoOp"
  input: "^optimizers/enc_optimizer/Assign"
  input: "^optimizers/enc_optimizer/Assign_1"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/bias/ApplyAdam"
  input: "^optimizers/enc_optimizer/update_encoder_model/encoder/layer_2/fc/kernel/ApplyAdam"
}
node {
  name: "optimizers/gradients_2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Fill"
  op: "Fill"
  input: "optimizers/gradients_2/Shape"
  input: "optimizers/gradients_2/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/Fill"
}
node {
  name: "optimizers/gradients_2/loss_functions/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/Fill"
  input: "^optimizers/gradients_2/loss_functions/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/Fill"
  input: "^optimizers/gradients_2/loss_functions/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/add_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_1_grad/Tile"
  op: "Tile"
  input: "optimizers/gradients_2/loss_functions/Mean_1_grad/Reshape"
  input: "optimizers/gradients_2/loss_functions/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 50.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "optimizers/gradients_2/loss_functions/Mean_1_grad/Tile"
  input: "optimizers/gradients_2/loss_functions/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/add_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Shape"
  op: "Shape"
  input: "loss_functions/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Tile"
  op: "Tile"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Reshape"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Prod"
  op: "Prod"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Shape_1"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Prod_1"
  op: "Prod"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Shape_2"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Maximum"
  op: "Maximum"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Prod_1"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Prod"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/Cast"
  op: "Cast"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/Mean_grad/truediv"
  op: "RealDiv"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Tile"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/Mean_1_grad/truediv"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/Mean_1_grad/truediv"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/Mean_1_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/Mean_1_grad/truediv"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/Mean_1_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Shape"
  op: "Shape"
  input: "loss_functions/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Shape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/truediv"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Sum"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/loss_functions/Mean_grad/truediv"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Sum_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/Neg"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/control_dependency"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/control_dependency"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/Mean_1_grad/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/Neg"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/add/x"
  op: "Const"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/add"
  op: "AddV2"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/add/x"
  input: "loss_functions/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/mul"
  op: "Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "loss_functions/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Shape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Sum"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Neg"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Sum_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/add/x"
  input: "loss_functions/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_1/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_1/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/zeros_like"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  input: "loss_functions/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Exp_grad/mul"
  op: "Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Log1p_grad/mul"
  input: "loss_functions/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/zeros_like"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_functions/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Shape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "loss_functions/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Sum"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/BiasAdd"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Mul_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Sum_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Log1p_grad/mul"
  input: "loss_functions/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss_1/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Exp_grad/mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss_1/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/zeros_like"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "loss_functions/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "loss_functions/logistic_loss/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Exp_grad/mul"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "loss_functions/logistic_loss/GreaterEqual"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/zeros_like"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select_1"
  input: "^optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss_1/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/loss_functions/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN"
  op: "AddN"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/mul_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_1"
  op: "AddN"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/mul_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/loss_functions/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/loss_functions/logistic_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_2"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_3"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_logits/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_logits/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity"
  op: "Identity"
  input: "optimizers/gradients_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_1"
  op: "Shape"
  input: "optimizers/gradients_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_1"
  input: "optimizers/gradients_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_1"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_2"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_1/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_1"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_2"
  input: "optimizers/gradients_2/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/zeros_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_2"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_2"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_3"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_2/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_2"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_3"
  input: "optimizers/gradients_2/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_4"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_4"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_4"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_3"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_3"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_4"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_3/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_3"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_4"
  input: "optimizers/gradients_2/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/zeros_3"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul/x"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_5"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/AddN_5"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/mul/x"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_6"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_6"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_6"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator_1/concat"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_7"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_7"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_7"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/mod"
  op: "FloorMod"
  input: "discriminator_model/discriminator_1/concat/axis"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/mod"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice"
  op: "Slice"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/ConcatOffset"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice_1"
  op: "Slice"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/ConcatOffset:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "discriminator_model/discriminator/concat"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_8"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/mod"
  op: "FloorMod"
  input: "discriminator_model/discriminator/concat/axis"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ShapeN"
  op: "ShapeN"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/Merge"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/mod"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ShapeN"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice"
  op: "Slice"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ConcatOffset"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice_1"
  op: "Slice"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ConcatOffset:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_9"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/y_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/y_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optimizers/gradients_2/discriminator_model/discriminator/concat_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/cond_grad:1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_4"
  op: "Switch"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_4"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_5"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_4/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_4"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_5"
  input: "optimizers/gradients_2/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_5"
  op: "Switch"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_5"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_6"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_5/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_5"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_6"
  input: "optimizers/gradients_2/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul/Switch:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_6"
  op: "Switch"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_6"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_7"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_6/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_6"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_7"
  input: "optimizers/gradients_2/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/zeros_6"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_7"
  op: "Switch"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator_1/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_7"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_8"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_7/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_7"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_7"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_8"
  input: "optimizers/gradients_2/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/zeros_7"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_8"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_8"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_9"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_8/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_8"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_9"
  input: "optimizers/gradients_2/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_9"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_9"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_10"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_9/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_9"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_9"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_10"
  input: "optimizers/gradients_2/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Merge_grad/tuple/control_dependency"
  input: "optimizers/gradients_2/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_10"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_10"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_10"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_11"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/dropout/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_11"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/Neg"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_11"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/Neg"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_10"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_10"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_11"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_10/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_10"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_10"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_11"
  input: "optimizers/gradients_2/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/zeros_10"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Switch_11"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Identity_11"
  op: "Identity"
  input: "optimizers/gradients_2/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/Shape_12"
  op: "Shape"
  input: "optimizers/gradients_2/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_11/Const"
  op: "Const"
  input: "^optimizers/gradients_2/Identity_11"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/zeros_11"
  op: "Fill"
  input: "optimizers/gradients_2/Shape_12"
  input: "optimizers/gradients_2/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "optimizers/gradients_2/zeros_11"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul/x"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul/x"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Reshape"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_12"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/AddN_12"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_13"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/AddN_13"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/mul/x"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape_1"
  op: "Shape"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul"
  op: "Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/mul/x"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Mul_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Sum_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_14"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_14"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_14"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_15"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_15"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_15"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Neg_grad/Neg"
  op: "Neg"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "generator_model/generator/layer_3/fc/BiasAdd"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "generator_model/random_normal"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_16"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_16"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_16"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_17"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optimizers/gradients_2/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/AddN_17"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/AddN_17"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/leaky_relu/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_18"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "encoder_model/encoder/layer_2/fc/BiasAdd"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
  input: "^optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_19"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_20"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/x_layer_1/fc/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/x_layer_1/fc/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/gradients_2/AddN_21"
  op: "AddN"
  input: "optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  input: "optimizers/gradients_2/discriminator_model/discriminator/z_fc_1/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizers/gradients_2/discriminator_model/discriminator_1/z_fc_1/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/beta1_power_2/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "optimizers/beta1_power_2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizers/beta1_power_2/Assign"
  op: "Assign"
  input: "optimizers/beta1_power_2"
  input: "optimizers/beta1_power_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/beta1_power_2/read"
  op: "Identity"
  input: "optimizers/beta1_power_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/beta2_power_2/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizers/beta2_power_2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optimizers/beta2_power_2/Assign"
  op: "Assign"
  input: "optimizers/beta2_power_2"
  input: "optimizers/beta2_power_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/beta2_power_2/read"
  op: "Identity"
  input: "optimizers/beta2_power_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Initializer/zeros"
  op: "Fill"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Initializer/zeros/shape_as_tensor"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Initializer/zeros"
  op: "Fill"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/shape_as_tensor"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Initializer/zeros"
  op: "Fill"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/shape_as_tensor"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros"
  op: "Fill"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/shape_as_tensor"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/dis_optimizer/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "optimizers/dis_optimizer/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "optimizers/dis_optimizer/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/beta2_power_2/read"
  input: "lr_pl"
  input: "optimizers/dis_optimizer/beta1"
  input: "optimizers/dis_optimizer/beta2"
  input: "optimizers/dis_optimizer/epsilon"
  input: "optimizers/gradients_2/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/dis_optimizer/mul"
  op: "Mul"
  input: "optimizers/beta1_power_2/read"
  input: "optimizers/dis_optimizer/beta1"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/dis_optimizer/Assign"
  op: "Assign"
  input: "optimizers/beta1_power_2"
  input: "optimizers/dis_optimizer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/dis_optimizer/mul_1"
  op: "Mul"
  input: "optimizers/beta2_power_2/read"
  input: "optimizers/dis_optimizer/beta2"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/dis_optimizer/Assign_1"
  op: "Assign"
  input: "optimizers/beta2_power_2"
  input: "optimizers/dis_optimizer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optimizers/dis_optimizer"
  op: "NoOp"
  input: "^optimizers/dis_optimizer/Assign"
  input: "^optimizers/dis_optimizer/Assign_1"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/x_layer_1/fc/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_1/dense/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/y_fc_logits/dense/kernel/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/bias/ApplyAdam"
  input: "^optimizers/dis_optimizer/update_discriminator_model/discriminator/z_fc_1/dense/kernel/ApplyAdam"
}
node {
  name: "optimizers/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized"
  input: "optimizers/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/switch_t"
  op: "Identity"
  input: "optimizers/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/switch_f"
  op: "Identity"
  input: "optimizers/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/read"
  op: "Identity"
  input: "optimizers/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  input: "optimizers/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform"
  input: "optimizers/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/Merge"
  op: "Merge"
  input: "optimizers/cond/Switch_1"
  input: "optimizers/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/Initializer/random_uniform"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/read/Switch_discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/read_discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond/read/Switch_discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond/Merge_discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond/Switch_1"
  input: "optimizers/cond/read_discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/cond/Merge_discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_1/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_1"
  input: "optimizers/IsVariableInitialized_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/switch_t"
  op: "Identity"
  input: "optimizers/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/switch_f"
  op: "Identity"
  input: "optimizers/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/read"
  op: "Identity"
  input: "optimizers/cond_1/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  input: "optimizers/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/Initializer/zeros"
  input: "optimizers/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/Merge"
  op: "Merge"
  input: "optimizers/cond_1/Switch_1"
  input: "optimizers/cond_1/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/Initializer/zeros"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/read/Switch_discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/read_discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_1/read/Switch_discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_1/Merge_discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_1/Switch_1"
  input: "optimizers/cond_1/read_discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  input: "optimizers/cond_1/Merge_discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_2/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_2"
  input: "optimizers/IsVariableInitialized_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/switch_t"
  op: "Identity"
  input: "optimizers/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/switch_f"
  op: "Identity"
  input: "optimizers/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/read"
  op: "Identity"
  input: "optimizers/cond_2/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  input: "optimizers/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform"
  input: "optimizers/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/Merge"
  op: "Merge"
  input: "optimizers/cond_2/Switch_1"
  input: "optimizers/cond_2/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/Initializer/random_uniform"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/read/Switch_discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/read_discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_2/read/Switch_discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_2/Merge_discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_2/Switch_1"
  input: "optimizers/cond_2/read_discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_2/Merge_discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_3/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_3"
  input: "optimizers/IsVariableInitialized_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/switch_t"
  op: "Identity"
  input: "optimizers/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/switch_f"
  op: "Identity"
  input: "optimizers/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/read"
  op: "Identity"
  input: "optimizers/cond_3/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  input: "optimizers/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/Initializer/zeros"
  input: "optimizers/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/Merge"
  op: "Merge"
  input: "optimizers/cond_3/Switch_1"
  input: "optimizers/cond_3/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/Initializer/zeros"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/read/Switch_discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/read_discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_3/read/Switch_discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_3/Merge_discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_3/Switch_1"
  input: "optimizers/cond_3/read_discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  input: "optimizers/cond_3/Merge_discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_4/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_4"
  input: "optimizers/IsVariableInitialized_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/switch_t"
  op: "Identity"
  input: "optimizers/cond_4/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/switch_f"
  op: "Identity"
  input: "optimizers/cond_4/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/read"
  op: "Identity"
  input: "optimizers/cond_4/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  input: "optimizers/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform"
  input: "optimizers/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/Merge"
  op: "Merge"
  input: "optimizers/cond_4/Switch_1"
  input: "optimizers/cond_4/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/Initializer/random_uniform"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/read/Switch_discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/read_discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_4/read/Switch_discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_4/Merge_discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_4/Switch_1"
  input: "optimizers/cond_4/read_discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_4/Merge_discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_5/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_5"
  input: "optimizers/IsVariableInitialized_5"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/switch_t"
  op: "Identity"
  input: "optimizers/cond_5/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/switch_f"
  op: "Identity"
  input: "optimizers/cond_5/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_5"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/read"
  op: "Identity"
  input: "optimizers/cond_5/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  input: "optimizers/cond_5/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/Initializer/zeros"
  input: "optimizers/cond_5/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/Merge"
  op: "Merge"
  input: "optimizers/cond_5/Switch_1"
  input: "optimizers/cond_5/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/Initializer/zeros"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/read/Switch_discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_5/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/read_discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_5/read/Switch_discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_5/Merge_discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_5/Switch_1"
  input: "optimizers/cond_5/read_discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  input: "optimizers/cond_5/Merge_discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_6/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_6"
  input: "optimizers/IsVariableInitialized_6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/switch_t"
  op: "Identity"
  input: "optimizers/cond_6/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/switch_f"
  op: "Identity"
  input: "optimizers/cond_6/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/read"
  op: "Identity"
  input: "optimizers/cond_6/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  input: "optimizers/cond_6/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform"
  input: "optimizers/cond_6/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/Merge"
  op: "Merge"
  input: "optimizers/cond_6/Switch_1"
  input: "optimizers/cond_6/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/Initializer/random_uniform"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/read/Switch_discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_6/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/read_discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_6/read/Switch_discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_6/Merge_discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_6/Switch_1"
  input: "optimizers/cond_6/read_discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_6/Merge_discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_7/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_7"
  input: "optimizers/IsVariableInitialized_7"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/switch_t"
  op: "Identity"
  input: "optimizers/cond_7/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/switch_f"
  op: "Identity"
  input: "optimizers/cond_7/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_7"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/read"
  op: "Identity"
  input: "optimizers/cond_7/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  input: "optimizers/cond_7/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/Initializer/zeros"
  input: "optimizers/cond_7/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/Merge"
  op: "Merge"
  input: "optimizers/cond_7/Switch_1"
  input: "optimizers/cond_7/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/Initializer/zeros"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/read/Switch_discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_7/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/read_discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_7/read/Switch_discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_7/Merge_discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_7/Switch_1"
  input: "optimizers/cond_7/read_discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  input: "optimizers/cond_7/Merge_discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9998999834060669
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg"
  op: "AssignSub"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1"
  op: "AssignSub"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2"
  op: "AssignSub"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3"
  op: "AssignSub"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4"
  op: "AssignSub"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5"
  op: "AssignSub"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6"
  op: "AssignSub"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/sub/x"
  input: "optimizers/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/sub_1"
  op: "Sub"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/read"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/sub_1"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7"
  op: "AssignSub"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage/AssignMovingAvg_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage"
  op: "NoOp"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg_1"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg_2"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg_3"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg_4"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg_5"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg_6"
  input: "^optimizers/ExponentialMovingAverage/AssignMovingAvg_7"
}
node {
  name: "optimizers/group_deps"
  op: "NoOp"
  input: "^optimizers/ExponentialMovingAverage"
  input: "^optimizers/dis_optimizer"
}
node {
  name: "optimizers/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_8/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_8"
  input: "optimizers/IsVariableInitialized_8"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/switch_t"
  op: "Identity"
  input: "optimizers/cond_8/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/switch_f"
  op: "Identity"
  input: "optimizers/cond_8/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_8"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/read"
  op: "Identity"
  input: "optimizers/cond_8/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_1/fc/kernel"
  input: "optimizers/cond_8/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform"
  input: "optimizers/cond_8/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/Merge"
  op: "Merge"
  input: "optimizers/cond_8/Switch_1"
  input: "optimizers/cond_8/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_1/fc/kernel"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/kernel/Initializer/random_uniform"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/read/Switch_generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_8/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/read_generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_8/read/Switch_generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_8/Merge_generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_8/Switch_1"
  input: "optimizers/cond_8/read_generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_8/Merge_generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_9/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_9"
  input: "optimizers/IsVariableInitialized_9"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/switch_t"
  op: "Identity"
  input: "optimizers/cond_9/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/switch_f"
  op: "Identity"
  input: "optimizers/cond_9/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_9"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/read"
  op: "Identity"
  input: "optimizers/cond_9/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_1/fc/bias"
  input: "optimizers/cond_9/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/bias/Initializer/zeros"
  input: "optimizers/cond_9/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/Merge"
  op: "Merge"
  input: "optimizers/cond_9/Switch_1"
  input: "optimizers/cond_9/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_1/fc/bias"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/bias/Initializer/zeros"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/read/Switch_generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_9/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/read_generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_9/read/Switch_generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_9/Merge_generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_9/Switch_1"
  input: "optimizers/cond_9/read_generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  input: "optimizers/cond_9/Merge_generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_10/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_10"
  input: "optimizers/IsVariableInitialized_10"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/switch_t"
  op: "Identity"
  input: "optimizers/cond_10/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/switch_f"
  op: "Identity"
  input: "optimizers/cond_10/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_10"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/read"
  op: "Identity"
  input: "optimizers/cond_10/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_2/fc/kernel"
  input: "optimizers/cond_10/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform"
  input: "optimizers/cond_10/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/Merge"
  op: "Merge"
  input: "optimizers/cond_10/Switch_1"
  input: "optimizers/cond_10/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_2/fc/kernel"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/kernel/Initializer/random_uniform"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/read/Switch_generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_10/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/read_generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_10/read/Switch_generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_10/Merge_generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_10/Switch_1"
  input: "optimizers/cond_10/read_generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_10/Merge_generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_11/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_11"
  input: "optimizers/IsVariableInitialized_11"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/switch_t"
  op: "Identity"
  input: "optimizers/cond_11/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/switch_f"
  op: "Identity"
  input: "optimizers/cond_11/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_11"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/read"
  op: "Identity"
  input: "optimizers/cond_11/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_2/fc/bias"
  input: "optimizers/cond_11/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/bias/Initializer/zeros"
  input: "optimizers/cond_11/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/Merge"
  op: "Merge"
  input: "optimizers/cond_11/Switch_1"
  input: "optimizers/cond_11/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_2/fc/bias"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/bias/Initializer/zeros"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/read/Switch_generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_11/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/read_generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_11/read/Switch_generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_11/Merge_generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_11/Switch_1"
  input: "optimizers/cond_11/read_generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  input: "optimizers/cond_11/Merge_generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_12/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_12"
  input: "optimizers/IsVariableInitialized_12"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/switch_t"
  op: "Identity"
  input: "optimizers/cond_12/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/switch_f"
  op: "Identity"
  input: "optimizers/cond_12/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_12"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/read"
  op: "Identity"
  input: "optimizers/cond_12/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_3/fc/kernel"
  input: "optimizers/cond_12/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform"
  input: "optimizers/cond_12/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/Merge"
  op: "Merge"
  input: "optimizers/cond_12/Switch_1"
  input: "optimizers/cond_12/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_3/fc/kernel"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/kernel/Initializer/random_uniform"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/read/Switch_generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_12/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/read_generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_12/read/Switch_generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_12/Merge_generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_12/Switch_1"
  input: "optimizers/cond_12/read_generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_12/Merge_generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_13/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_13"
  input: "optimizers/IsVariableInitialized_13"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/switch_t"
  op: "Identity"
  input: "optimizers/cond_13/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/switch_f"
  op: "Identity"
  input: "optimizers/cond_13/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_13"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/read"
  op: "Identity"
  input: "optimizers/cond_13/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_3/fc/bias"
  input: "optimizers/cond_13/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/bias/Initializer/zeros"
  input: "optimizers/cond_13/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/Merge"
  op: "Merge"
  input: "optimizers/cond_13/Switch_1"
  input: "optimizers/cond_13/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "generator_model/generator/layer_3/fc/bias"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/bias/Initializer/zeros"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/read/Switch_generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_13/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/read_generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_13/read/Switch_generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_13/Merge_generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_13/Switch_1"
  input: "optimizers/cond_13/read_generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  input: "optimizers/cond_13/Merge_generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9998999834060669
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/sub/x"
  input: "optimizers/ExponentialMovingAverage_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/read"
  input: "generator_model/generator/layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/sub_1"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg"
  op: "AssignSub"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/sub/x"
  input: "optimizers/ExponentialMovingAverage_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/read"
  input: "generator_model/generator/layer_1/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/sub_1"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/sub/x"
  input: "optimizers/ExponentialMovingAverage_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/sub_1"
  op: "Sub"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/read"
  input: "generator_model/generator/layer_2/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/sub_1"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2"
  op: "AssignSub"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/sub/x"
  input: "optimizers/ExponentialMovingAverage_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/sub_1"
  op: "Sub"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/read"
  input: "generator_model/generator/layer_2/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/sub_1"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3"
  op: "AssignSub"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/sub/x"
  input: "optimizers/ExponentialMovingAverage_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/sub_1"
  op: "Sub"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/read"
  input: "generator_model/generator/layer_3/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/sub_1"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4"
  op: "AssignSub"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/sub/x"
  input: "optimizers/ExponentialMovingAverage_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/sub_1"
  op: "Sub"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/read"
  input: "generator_model/generator/layer_3/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/sub_1"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5"
  op: "AssignSub"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_1"
  op: "NoOp"
  input: "^optimizers/ExponentialMovingAverage_1/AssignMovingAvg"
  input: "^optimizers/ExponentialMovingAverage_1/AssignMovingAvg_1"
  input: "^optimizers/ExponentialMovingAverage_1/AssignMovingAvg_2"
  input: "^optimizers/ExponentialMovingAverage_1/AssignMovingAvg_3"
  input: "^optimizers/ExponentialMovingAverage_1/AssignMovingAvg_4"
  input: "^optimizers/ExponentialMovingAverage_1/AssignMovingAvg_5"
}
node {
  name: "optimizers/group_deps_1"
  op: "NoOp"
  input: "^optimizers/ExponentialMovingAverage_1"
  input: "^optimizers/gen_optimizer"
}
node {
  name: "optimizers/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_14/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_14"
  input: "optimizers/IsVariableInitialized_14"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/switch_t"
  op: "Identity"
  input: "optimizers/cond_14/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/switch_f"
  op: "Identity"
  input: "optimizers/cond_14/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_14"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/read"
  op: "Identity"
  input: "optimizers/cond_14/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  input: "optimizers/cond_14/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform"
  input: "optimizers/cond_14/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/Merge"
  op: "Merge"
  input: "optimizers/cond_14/Switch_1"
  input: "optimizers/cond_14/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/kernel/Initializer/random_uniform"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/read/Switch_encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_14/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/read_encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_14/read/Switch_encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_14/Merge_encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_14/Switch_1"
  input: "optimizers/cond_14/read_encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_14/Merge_encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_15/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_15"
  input: "optimizers/IsVariableInitialized_15"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/switch_t"
  op: "Identity"
  input: "optimizers/cond_15/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/switch_f"
  op: "Identity"
  input: "optimizers/cond_15/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_15"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/read"
  op: "Identity"
  input: "optimizers/cond_15/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_1/fc/bias"
  input: "optimizers/cond_15/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/bias/Initializer/zeros"
  input: "optimizers/cond_15/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/Merge"
  op: "Merge"
  input: "optimizers/cond_15/Switch_1"
  input: "optimizers/cond_15/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_1/fc/bias"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/bias/Initializer/zeros"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/read/Switch_encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_15/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/read_encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_15/read/Switch_encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_15/Merge_encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_15/Switch_1"
  input: "optimizers/cond_15/read_encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  input: "optimizers/cond_15/Merge_encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_16/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_16"
  input: "optimizers/IsVariableInitialized_16"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/switch_t"
  op: "Identity"
  input: "optimizers/cond_16/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/switch_f"
  op: "Identity"
  input: "optimizers/cond_16/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_16"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/read"
  op: "Identity"
  input: "optimizers/cond_16/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  input: "optimizers/cond_16/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform"
  input: "optimizers/cond_16/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/Merge"
  op: "Merge"
  input: "optimizers/cond_16/Switch_1"
  input: "optimizers/cond_16/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/kernel/Initializer/random_uniform"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/Switch_1"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/read/Switch_encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_16/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/read_encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_16/read/Switch_encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_16/Merge_encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_16/Switch_1"
  input: "optimizers/cond_16/read_encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/cond_16/Merge_encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizers/cond_17/Switch"
  op: "Switch"
  input: "optimizers/IsVariableInitialized_17"
  input: "optimizers/IsVariableInitialized_17"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/switch_t"
  op: "Identity"
  input: "optimizers/cond_17/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/switch_f"
  op: "Identity"
  input: "optimizers/cond_17/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/pred_id"
  op: "Identity"
  input: "optimizers/IsVariableInitialized_17"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/read"
  op: "Identity"
  input: "optimizers/cond_17/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_2/fc/bias"
  input: "optimizers/cond_17/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/bias/Initializer/zeros"
  input: "optimizers/cond_17/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/Merge"
  op: "Merge"
  input: "optimizers/cond_17/Switch_1"
  input: "optimizers/cond_17/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "encoder_model/encoder/layer_2/fc/bias"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/bias/Initializer/zeros"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/Switch_1"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/read/Switch_encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  op: "Switch"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/cond/Merge"
  input: "optimizers/cond_17/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/read_encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  op: "Identity"
  input: "optimizers/cond_17/read/Switch_encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/cond_17/Merge_encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  op: "Merge"
  input: "optimizers/cond_17/Switch_1"
  input: "optimizers/cond_17/read_encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  input: "optimizers/cond_17/Merge_encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/read"
  op: "Identity"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9998999834060669
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/sub/x"
  input: "optimizers/ExponentialMovingAverage_2/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/read"
  input: "encoder_model/encoder/layer_1/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/sub_1"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg"
  op: "AssignSub"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/sub/x"
  input: "optimizers/ExponentialMovingAverage_2/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/read"
  input: "encoder_model/encoder/layer_1/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/sub_1"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/sub/x"
  input: "optimizers/ExponentialMovingAverage_2/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/sub_1"
  op: "Sub"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/read"
  input: "encoder_model/encoder/layer_2/fc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/sub_1"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2"
  op: "AssignSub"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/sub"
  op: "Sub"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/sub/x"
  input: "optimizers/ExponentialMovingAverage_2/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/sub_1"
  op: "Sub"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/read"
  input: "encoder_model/encoder/layer_2/fc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/mul"
  op: "Mul"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/sub_1"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3"
  op: "AssignSub"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  input: "optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizers/ExponentialMovingAverage_2"
  op: "NoOp"
  input: "^optimizers/ExponentialMovingAverage_2/AssignMovingAvg"
  input: "^optimizers/ExponentialMovingAverage_2/AssignMovingAvg_1"
  input: "^optimizers/ExponentialMovingAverage_2/AssignMovingAvg_2"
  input: "^optimizers/ExponentialMovingAverage_2/AssignMovingAvg_3"
}
node {
  name: "optimizers/group_deps_2"
  op: "NoOp"
  input: "^optimizers/ExponentialMovingAverage_2"
  input: "^optimizers/enc_optimizer"
}
node {
  name: "summary/dis_summary/loss_discriminator/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "summary/dis_summary/loss_discriminator"
      }
    }
  }
}
node {
  name: "summary/dis_summary/loss_discriminator"
  op: "ScalarSummary"
  input: "summary/dis_summary/loss_discriminator/tags"
  input: "loss_functions/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "summary/dis_summary/loss_dis_encoder/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "summary/dis_summary/loss_dis_encoder"
      }
    }
  }
}
node {
  name: "summary/dis_summary/loss_dis_encoder"
  op: "ScalarSummary"
  input: "summary/dis_summary/loss_dis_encoder/tags"
  input: "loss_functions/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "summary/dis_summary/loss_dis_gen/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "summary/dis_summary/loss_dis_gen"
      }
    }
  }
}
node {
  name: "summary/dis_summary/loss_dis_gen"
  op: "ScalarSummary"
  input: "summary/dis_summary/loss_dis_gen/tags"
  input: "loss_functions/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "summary/gen_summary/loss_generator/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "summary/gen_summary/loss_generator"
      }
    }
  }
}
node {
  name: "summary/gen_summary/loss_generator"
  op: "ScalarSummary"
  input: "summary/gen_summary/loss_generator/tags"
  input: "loss_functions/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "summary/gen_summary/loss_encoder/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "summary/gen_summary/loss_encoder"
      }
    }
  }
}
node {
  name: "summary/gen_summary/loss_encoder"
  op: "ScalarSummary"
  input: "summary/gen_summary/loss_encoder/tags"
  input: "loss_functions/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "summary/Merge/MergeSummary"
  op: "MergeSummary"
  input: "summary/dis_summary/loss_discriminator"
  input: "summary/dis_summary/loss_dis_encoder"
  input: "summary/dis_summary/loss_dis_gen"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "summary/Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "summary/gen_summary/loss_generator"
  input: "summary/gen_summary/loss_encoder"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/fc/MatMul"
  op: "MatMul"
  input: "input"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "encoder_model_1/encoder/layer_1/fc/MatMul"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/leaky_relu/Relu"
  op: "Relu"
  input: "encoder_model_1/encoder/layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/leaky_relu/Neg"
  op: "Neg"
  input: "encoder_model_1/encoder/layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "encoder_model_1/encoder/layer_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/leaky_relu/mul"
  op: "Mul"
  input: "encoder_model_1/encoder/layer_1/leaky_relu/mul/x"
  input: "encoder_model_1/encoder/layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_1/leaky_relu/sub"
  op: "Sub"
  input: "encoder_model_1/encoder/layer_1/leaky_relu/Relu"
  input: "encoder_model_1/encoder/layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_2/fc/MatMul"
  op: "MatMul"
  input: "encoder_model_1/encoder/layer_1/leaky_relu/sub"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder_model_1/encoder/layer_2/fc/BiasAdd"
  op: "BiasAdd"
  input: "encoder_model_1/encoder/layer_2/fc/MatMul"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_model_1/generator/layer_1/fc/MatMul"
  op: "MatMul"
  input: "encoder_model_1/encoder/layer_2/fc/BiasAdd"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_model_1/generator/layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "generator_model_1/generator/layer_1/fc/MatMul"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_model_1/generator/layer_1/Relu"
  op: "Relu"
  input: "generator_model_1/generator/layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_model_1/generator/layer_2/fc/MatMul"
  op: "MatMul"
  input: "generator_model_1/generator/layer_1/Relu"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_model_1/generator/layer_2/fc/BiasAdd"
  op: "BiasAdd"
  input: "generator_model_1/generator/layer_2/fc/MatMul"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_model_1/generator/layer_2/Relu"
  op: "Relu"
  input: "generator_model_1/generator/layer_2/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_model_1/generator/layer_3/fc/MatMul"
  op: "MatMul"
  input: "generator_model_1/generator/layer_2/Relu"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_model_1/generator/layer_3/fc/BiasAdd"
  op: "BiasAdd"
  input: "generator_model_1/generator/layer_3/fc/MatMul"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/fc/MatMul"
  op: "MatMul"
  input: "input"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator/x_layer_1/fc/MatMul"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model_1/discriminator/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model_1/discriminator/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/mul/x"
  input: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/Relu"
  input: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model_1/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model_1/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model_1/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2284
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/mul"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator/x_layer_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Identity"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dense/MatMul"
  op: "MatMul"
  input: "encoder_model_1/encoder/layer_2/fc/BiasAdd"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator/z_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model_1/discriminator/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model_1/discriminator/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/mul/x"
  input: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/Relu"
  input: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model_1/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model_1/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model_1/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2316
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator/z_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Identity"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/concat"
  op: "ConcatV2"
  input: "discriminator_model_1/discriminator/x_layer_1/dropout/cond/Merge"
  input: "discriminator_model_1/discriminator/z_fc_1/dropout/cond/Merge"
  input: "discriminator_model_1/discriminator/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model_1/discriminator/concat"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator/y_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model_1/discriminator/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model_1/discriminator/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/mul/x"
  input: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/Relu"
  input: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model_1/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model_1/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model_1/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2350
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator/y_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Identity"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_logits/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model_1/discriminator/y_fc_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator/y_fc_logits/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator/y_fc_logits/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/fc/MatMul"
  op: "MatMul"
  input: "generator_model_1/generator/layer_3/fc/BiasAdd"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/fc/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator_1/x_layer_1/fc/MatMul"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model_1/discriminator_1/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model_1/discriminator_1/x_layer_1/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/mul/x"
  input: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/Relu"
  input: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2384
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/mul"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator_1/x_layer_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Identity"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dense/MatMul"
  op: "MatMul"
  input: "encoder_model_1/encoder/layer_2/fc/BiasAdd"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/mul/x"
  input: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/Relu"
  input: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2416
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator_1/z_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Identity"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/concat"
  op: "ConcatV2"
  input: "discriminator_model_1/discriminator_1/x_layer_1/dropout/cond/Merge"
  input: "discriminator_model_1/discriminator_1/z_fc_1/dropout/cond/Merge"
  input: "discriminator_model_1/discriminator_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model_1/discriminator_1/concat"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/Relu"
  op: "Relu"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/Neg"
  op: "Neg"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  op: "Relu"
  input: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/mul/x"
  input: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/Relu"
  input: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Switch"
  op: "Switch"
  input: "is_training_pl"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/switch_t"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/switch_f"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/pred_id"
  op: "Identity"
  input: "is_training_pl"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/rate"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/Shape"
  op: "Shape"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2450
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/max"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/RandomUniform"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/mul"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/sub"
  op: "Sub"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/sub/x"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/truediv/x"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/random_uniform"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/Shape/Switch:1"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/Cast"
  op: "Cast"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/mul"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Identity"
  op: "Identity"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Identity/Switch"
  op: "Switch"
  input: "discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/sub"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model_1/discriminator_1/y_fc_1/leaky_relu/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Merge"
  op: "Merge"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Identity"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_logits/dense/MatMul"
  op: "MatMul"
  input: "discriminator_model_1/discriminator_1/y_fc_1/dropout/cond/Merge"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  op: "BiasAdd"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/MatMul"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/sub"
  op: "Sub"
  input: "input"
  input: "generator_model_1/generator/layer_3/fc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/Shape"
  op: "Shape"
  input: "Testing/Reconstruction_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice"
  op: "StridedSlice"
  input: "Testing/Reconstruction_loss/Flatten/flatten/Shape"
  input: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice/stack"
  input: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice/stack_1"
  input: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/Reshape/shape"
  op: "Pack"
  input: "Testing/Reconstruction_loss/Flatten/flatten/strided_slice"
  input: "Testing/Reconstruction_loss/Flatten/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/Flatten/flatten/Reshape"
  op: "Reshape"
  input: "Testing/Reconstruction_loss/sub"
  input: "Testing/Reconstruction_loss/Flatten/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/epsilon/Abs"
  op: "Abs"
  input: "Testing/Reconstruction_loss/Flatten/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/epsilon/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/epsilon/Sum"
  op: "Sum"
  input: "Testing/Reconstruction_loss/epsilon/Abs"
  input: "Testing/Reconstruction_loss/epsilon/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Testing/Reconstruction_loss/epsilon/Squeeze"
  op: "Squeeze"
  input: "Testing/Reconstruction_loss/epsilon/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/ones_like/Shape"
  op: "Shape"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Testing/Discriminator_loss/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/ones_like"
  op: "Fill"
  input: "Testing/Discriminator_loss/ones_like/Shape"
  input: "Testing/Discriminator_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "Testing/Discriminator_loss/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/Select"
  op: "Select"
  input: "Testing/Discriminator_loss/logistic_loss/GreaterEqual"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "Testing/Discriminator_loss/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/Neg"
  op: "Neg"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/Select_1"
  op: "Select"
  input: "Testing/Discriminator_loss/logistic_loss/GreaterEqual"
  input: "Testing/Discriminator_loss/logistic_loss/Neg"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/mul"
  op: "Mul"
  input: "discriminator_model_1/discriminator_1/y_fc_logits/dense/BiasAdd"
  input: "Testing/Discriminator_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/sub"
  op: "Sub"
  input: "Testing/Discriminator_loss/logistic_loss/Select"
  input: "Testing/Discriminator_loss/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/Exp"
  op: "Exp"
  input: "Testing/Discriminator_loss/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss/Log1p"
  op: "Log1p"
  input: "Testing/Discriminator_loss/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/logistic_loss"
  op: "Add"
  input: "Testing/Discriminator_loss/logistic_loss/sub"
  input: "Testing/Discriminator_loss/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Discriminator_loss/Squeeze"
  op: "Squeeze"
  input: "Testing/Discriminator_loss/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "Testing/Score/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Testing/Score/mul"
  op: "Mul"
  input: "Testing/Score/mul/x"
  input: "Testing/Reconstruction_loss/epsilon/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Testing/Score/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Testing/Score/mul_1"
  op: "Mul"
  input: "Testing/Score/mul_1/x"
  input: "Testing/Discriminator_loss/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Testing/Score/add"
  op: "AddV2"
  input: "Testing/Score/mul"
  input: "Testing/Score/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "optimizers/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "optimizers/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "optimizers/beta1_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "optimizers/beta2_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "optimizers/beta1_power_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "optimizers/beta2_power_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 78
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "encoder_model/encoder/layer_1/fc/kernel"
        string_val: "encoder_model/encoder/layer_1/fc/bias"
        string_val: "encoder_model/encoder/layer_2/fc/kernel"
        string_val: "encoder_model/encoder/layer_2/fc/bias"
        string_val: "generator_model/generator/layer_1/fc/kernel"
        string_val: "generator_model/generator/layer_1/fc/bias"
        string_val: "generator_model/generator/layer_2/fc/kernel"
        string_val: "generator_model/generator/layer_2/fc/bias"
        string_val: "generator_model/generator/layer_3/fc/kernel"
        string_val: "generator_model/generator/layer_3/fc/bias"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias"
        string_val: "optimizers/beta1_power"
        string_val: "optimizers/beta2_power"
        string_val: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
        string_val: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
        string_val: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
        string_val: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
        string_val: "optimizers/beta1_power_1"
        string_val: "optimizers/beta2_power_1"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
        string_val: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
        string_val: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
        string_val: "optimizers/beta1_power_2"
        string_val: "optimizers/beta2_power_2"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^discriminator_model/discriminator/x_layer_1/fc/bias/Assign"
  input: "^discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1/Assign"
  input: "^discriminator_model/discriminator/x_layer_1/fc/kernel/Assign"
  input: "^discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/bias/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/kernel/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/bias/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/kernel/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/bias/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/kernel/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer/Assign"
  input: "^discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1/Assign"
  input: "^encoder_model/encoder/layer_1/fc/bias/Assign"
  input: "^encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage/Assign"
  input: "^encoder_model/encoder/layer_1/fc/bias/enc_optimizer/Assign"
  input: "^encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1/Assign"
  input: "^encoder_model/encoder/layer_1/fc/kernel/Assign"
  input: "^encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage/Assign"
  input: "^encoder_model/encoder/layer_1/fc/kernel/enc_optimizer/Assign"
  input: "^encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1/Assign"
  input: "^encoder_model/encoder/layer_2/fc/bias/Assign"
  input: "^encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage/Assign"
  input: "^encoder_model/encoder/layer_2/fc/bias/enc_optimizer/Assign"
  input: "^encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1/Assign"
  input: "^encoder_model/encoder/layer_2/fc/kernel/Assign"
  input: "^encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage/Assign"
  input: "^encoder_model/encoder/layer_2/fc/kernel/enc_optimizer/Assign"
  input: "^encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1/Assign"
  input: "^generator_model/generator/layer_1/fc/bias/Assign"
  input: "^generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage/Assign"
  input: "^generator_model/generator/layer_1/fc/bias/gen_optimizer/Assign"
  input: "^generator_model/generator/layer_1/fc/bias/gen_optimizer_1/Assign"
  input: "^generator_model/generator/layer_1/fc/kernel/Assign"
  input: "^generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage/Assign"
  input: "^generator_model/generator/layer_1/fc/kernel/gen_optimizer/Assign"
  input: "^generator_model/generator/layer_1/fc/kernel/gen_optimizer_1/Assign"
  input: "^generator_model/generator/layer_2/fc/bias/Assign"
  input: "^generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage/Assign"
  input: "^generator_model/generator/layer_2/fc/bias/gen_optimizer/Assign"
  input: "^generator_model/generator/layer_2/fc/bias/gen_optimizer_1/Assign"
  input: "^generator_model/generator/layer_2/fc/kernel/Assign"
  input: "^generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage/Assign"
  input: "^generator_model/generator/layer_2/fc/kernel/gen_optimizer/Assign"
  input: "^generator_model/generator/layer_2/fc/kernel/gen_optimizer_1/Assign"
  input: "^generator_model/generator/layer_3/fc/bias/Assign"
  input: "^generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage/Assign"
  input: "^generator_model/generator/layer_3/fc/bias/gen_optimizer/Assign"
  input: "^generator_model/generator/layer_3/fc/bias/gen_optimizer_1/Assign"
  input: "^generator_model/generator/layer_3/fc/kernel/Assign"
  input: "^generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage/Assign"
  input: "^generator_model/generator/layer_3/fc/kernel/gen_optimizer/Assign"
  input: "^generator_model/generator/layer_3/fc/kernel/gen_optimizer_1/Assign"
  input: "^optimizers/beta1_power/Assign"
  input: "^optimizers/beta1_power_1/Assign"
  input: "^optimizers/beta1_power_2/Assign"
  input: "^optimizers/beta2_power/Assign"
  input: "^optimizers/beta2_power_1/Assign"
  input: "^optimizers/beta2_power_2/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
        string_val: "encoder_model/encoder/layer_1/fc/bias"
        string_val: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
        string_val: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_1/fc/kernel"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_2/fc/bias"
        string_val: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
        string_val: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_2/fc/kernel"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
        string_val: "generator_model/generator/layer_1/fc/bias"
        string_val: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_1/fc/kernel"
        string_val: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
        string_val: "generator_model/generator/layer_2/fc/bias"
        string_val: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_2/fc/kernel"
        string_val: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
        string_val: "generator_model/generator/layer_3/fc/bias"
        string_val: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_3/fc/kernel"
        string_val: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
        string_val: "optimizers/beta1_power"
        string_val: "optimizers/beta1_power_1"
        string_val: "optimizers/beta1_power_2"
        string_val: "optimizers/beta2_power"
        string_val: "optimizers/beta2_power_1"
        string_val: "optimizers/beta2_power_2"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
  input: "encoder_model/encoder/layer_1/fc/bias"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
  input: "encoder_model/encoder/layer_2/fc/bias"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
  input: "generator_model/generator/layer_1/fc/bias"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
  input: "generator_model/generator/layer_1/fc/kernel"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
  input: "generator_model/generator/layer_2/fc/bias"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
  input: "generator_model/generator/layer_2/fc/kernel"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
  input: "generator_model/generator/layer_3/fc/bias"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
  input: "generator_model/generator/layer_3/fc/kernel"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
  input: "optimizers/beta1_power"
  input: "optimizers/beta1_power_1"
  input: "optimizers/beta1_power_2"
  input: "optimizers/beta2_power"
  input: "optimizers/beta2_power_1"
  input: "optimizers/beta2_power_2"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
        string_val: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
        string_val: "encoder_model/encoder/layer_1/fc/bias"
        string_val: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
        string_val: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_1/fc/kernel"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
        string_val: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_2/fc/bias"
        string_val: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
        string_val: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
        string_val: "encoder_model/encoder/layer_2/fc/kernel"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
        string_val: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
        string_val: "generator_model/generator/layer_1/fc/bias"
        string_val: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_1/fc/kernel"
        string_val: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
        string_val: "generator_model/generator/layer_2/fc/bias"
        string_val: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_2/fc/kernel"
        string_val: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
        string_val: "generator_model/generator/layer_3/fc/bias"
        string_val: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
        string_val: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
        string_val: "generator_model/generator/layer_3/fc/kernel"
        string_val: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
        string_val: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
        string_val: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
        string_val: "optimizers/beta1_power"
        string_val: "optimizers/beta1_power_1"
        string_val: "optimizers/beta1_power_2"
        string_val: "optimizers/beta2_power"
        string_val: "optimizers/beta2_power_1"
        string_val: "optimizers/beta2_power_2"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/bias/dis_optimizer_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "discriminator_model/discriminator/x_layer_1/fc/kernel/dis_optimizer_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/bias/dis_optimizer_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_1/dense/kernel/dis_optimizer_1"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/bias/dis_optimizer_1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "discriminator_model/discriminator/y_fc_logits/dense/kernel/dis_optimizer_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/y_fc_logits/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/bias/dis_optimizer_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "discriminator_model/discriminator/z_fc_1/dense/kernel/dis_optimizer_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/z_fc_1/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/bias/enc_optimizer_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "encoder_model/encoder/layer_1/fc/kernel/enc_optimizer_1"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/bias/enc_optimizer_1"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "encoder_model/encoder/layer_2/fc/kernel/enc_optimizer_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/bias/gen_optimizer_1"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "generator_model/generator/layer_1/fc/kernel/gen_optimizer_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/bias/gen_optimizer_1"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "generator_model/generator/layer_2/fc/kernel/gen_optimizer_1"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_2/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias/ExponentialMovingAverage"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/bias/gen_optimizer_1"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel/ExponentialMovingAverage"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "generator_model/generator/layer_3/fc/kernel/gen_optimizer_1"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_3/fc/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "optimizers/beta1_power"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "optimizers/beta1_power_1"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "optimizers/beta1_power_2"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "optimizers/beta2_power"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_model/generator/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "optimizers/beta2_power_1"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder_model/encoder/layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "optimizers/beta2_power_2"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_model/discriminator/x_layer_1/fc/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
versions {
  producer: 134
}
